from Cryptodome.Cipher import ARC4

# Decrypt each packet
with open("websocket_packets.txt") as f:
    decrypted = []
    for line in f:
        decoded = bytes.fromhex(line.replace("null", ""))
        pt = ARC4.new(b"n1ss3b4nd3ns_n1ss3w4r3").decrypt(decoded)
        decrypted.append(pt)

for data in (packets := iter(decrypted)):
    # Parse cmd requests (req = cmd, response = [status, output])
    if data == b"cmd":
        cmd = next(packets).strip().decode()

        status = int.from_bytes(next(packets), "big")
        output = next(packets).replace(b"\x91", "Ã¦".encode()).decode()

        print(f"CMD: {cmd} (status {status})")

        if output == "":
            continue

        cleaned = cmd.replace(" ", "_")
        for c in "/\\:|*":
            cleaned = cleaned.replace(c, "-")

        # Save result to file
        with open(f"cmd/{cleaned}.txt", "w") as f:
            f.write(output)

    # Parse upload requests (req = path, response = [status, content])
    elif data == b"upload":
        path = next(packets).strip().decode()
        filename = path.split("\\")[-1]

        status = int.from_bytes(next(packets), "big")
        content = next(packets)

        print(f"UPLOAD: {path} (status {status})")

        with open(f"upload/{filename}", "wb") as f:
            f.write(content)

    # Parse download requests (req = [path, content], response = [status, msg])
    elif data == b"download":
        path = next(packets).strip().decode()
        filename = path.split("\\")[-1]
        content = next(packets)

        status = int.from_bytes(next(packets), "big")
        msg = next(packets).strip().decode()

        print(f"DOWNLOAD: {path} (status {status} - {msg})")

        with open(f"download/{filename}", "wb") as f:
            f.write(content)

    # Print all other packets as ASCII
    else:
        print(data.decode())
